{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\brofiz\\\\todoList\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport colors from \"./assets/colors/colors\";\nimport AppBar from \"./src/components/AppBar\";\nimport Todo from \"./src/components/Todo\";\nimport TodoList from \"./src/components/TodoList\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todo = _useState4[0],\n      setTodo = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      todos = _useState6[0],\n      setTodos = _useState6[1];\n\n  var addTodo = function addTodo() {\n    if (title.length > 0) {\n      setTodos([].concat(_toConsumableArray(todos), [{\n        key: Date.now(),\n        name: title,\n        isChecked: false\n      }]));\n      setTitle(\"\");\n    }\n  };\n\n  var checkTodo = function checkTodo(id) {\n    setTodos(todos.map(function (todo) {\n      if (todo.key === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n\n      return todo;\n    }));\n  };\n\n  var deleteTodo = function deleteTodo(id) {\n    setTodos(todos.filter(function (todo) {\n      return todo.key !== id;\n    }));\n  };\n\n  useEffect(function () {\n    console.log(todos.length, \"TodoList length\");\n  }, [todos]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.statusBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(AppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Add a todo\",\n    value: title,\n    onChangeText: function onChangeText(value) {\n      return setTitle(value);\n    },\n    style: styles.textbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Add\",\n    color: \"#FB3946\",\n    onPress: function onPress() {\n      return addTodo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, todos.map(function (todo) {\n    return React.createElement(TodoList, {\n      key: todo.key,\n      todo: todo,\n      checkTodo: checkTodo,\n      deleteTodo: deleteTodo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    });\n  })));\n}\nvar styles = StyleSheet.create({\n  statusBar: {\n    backgroundColor: colors.red,\n    color: colors.white,\n    width: \"100%\",\n    height: 30\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.white,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  todo: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textbox: {\n    borderWidth: 1,\n    borderColor: colors.red,\n    borderRadius: 8,\n    padding: 10,\n    margin: 10,\n    width: \"80%\"\n  }\n});","map":{"version":3,"sources":["C:/Users/brofiz/todoList/App.js"],"names":["React","useState","useEffect","colors","AppBar","Todo","TodoList","App","title","setTitle","todo","setTodo","todos","setTodos","addTodo","length","key","Date","now","name","isChecked","checkTodo","id","map","deleteTodo","filter","console","log","styles","container","statusBar","value","textbox","StyleSheet","create","backgroundColor","red","color","white","width","height","flex","alignItems","justifyContent","flexDirection","borderWidth","borderColor","borderRadius","padding","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Button,\n  ScrollView\n} from \"react-native\";\nimport colors from \"./assets/colors/colors\";\nimport AppBar from \"./src/components/AppBar\";\nimport Todo from \"./src/components/Todo\";\nimport TodoList from \"./src/components/TodoList\";\n\nexport default function App() {\n  const [title, setTitle] = useState(\"\");\n\n  // iniitalize empty object todo\n  const [todo, setTodo] = useState({});\n\n  // Initalize empty array to store todos\n  const [todos, setTodos] = useState([]);\n\n  // function to add todo object in todo list\n  const addTodo = () => {\n    if (title.length > 0) {\n      // Add todo to the list\n      setTodos([...todos, { key: Date.now(), name: title, isChecked: false }]);\n      // clear the value of the textfield\n      setTitle(\"\");\n    }\n  };\n\n  // function to mark todo as checked or unchecked\n  const checkTodo = id => {\n    // loop through todo list and look for the the todo that matches the given id param\n    // update the state using setTodos function\n    setTodos(\n      todos.map(todo => {\n        if (todo.key === id) {\n          todo.isChecked = !todo.isChecked;\n        }\n        return todo;\n      })\n    );\n  };\n\n  // function to delete todo from the todo list\n  const deleteTodo = id => {\n    // loop through todo list and return todos that don't match the id\n    // update the state using setTodos function\n    setTodos(todos.filter(todo => {\n      return todo.key !== id;\n    }));\n  };\n\n  useEffect(() => {\n    console.log(todos.length, \"TodoList length\");\n    //console.log(todos);\n  }, [todos]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.statusBar}></View>\n      <AppBar />\n      <View style={styles.todo}>\n        <TextInput\n          placeholder=\"Add a todo\"\n          value={title}\n          onChangeText={value => setTitle(value)}\n          style={styles.textbox}\n        />\n        <Button title=\"Add\" color=\"#FB3946\" onPress={() => addTodo()} />\n      </View>\n\n      <ScrollView>\n        {todos.map(todo => (\n          <TodoList\n            key={todo.key}\n            todo={todo}\n            checkTodo={checkTodo}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  statusBar: {\n    backgroundColor: colors.red,\n    color: colors.white,\n    width: \"100%\",\n    height: 30\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.white,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  todo: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textbox: {\n    borderWidth: 1,\n    borderColor: colors.red,\n    borderRadius: 8,\n    padding: 10,\n    margin: 10,\n    width: \"80%\"\n  }\n});"]},"metadata":{},"sourceType":"module"}